//*****************************************************************************
//
// Имя файла    : 'core.cpp'
// Заголовок    : Ядро контроллера
// Автор        : Крыцкий А.В. 
// Контакты     : andrewtomsk@mail.ru
// Дата         : 25/09/2010
//
//*****************************************************************************

#include "types.h"
#include "core\core.h"
#include "core\processor.h"
//#include "core\aic.h"
//#include "core\wdt.h"
//#include "core\pmc.h"
//#include "core\rstc.h"
//#include "core\spi.h"
//#include "core\efc.h"
//#include "core\adc.h"
//#include "core\systimer.h"
#include "def_board.h"
//#include "def_timer.h"

// ============================================================================
//                          Базовые проверки
// ============================================================================

#if !defined(BOARD_WDT)
    #define  BOARD_WDT       0  
#endif
//#if !defined(BOARD_REMAP)
//    #define  BOARD_REMAP     1  
//#endif

// ============================================================================
//                        Прототипы функций
// ============================================================================
  
    //extern "C" __ARM void LowLevelInit     (void);    
    extern           void AppMain          (void);
    
// ============================================================================
//                        Глобальные переменные
// ============================================================================

    // Частота Mck в системе
    uint32  MckClock;
    
// ============================================================================
///
///                     Начальная инициализация ядра
///    
// ============================================================================    
/// Вызывается до инициализации сегментов .bss    
// ============================================================================
///                             LowLevelInit
// ============================================================================

//__ARM void LowLevelInit (void) 
//{
//    // Инициализация контроллера EFC
//    init_efc();
//    // Инициализация тактирования
//    init_pmc();
//    // Инициализация модуля AIC
//    init_aic();
//    // Разрешение пользовательского сброса
//    init_rtsc();
//
//    // Запрет Watchdog таймера
//    #if !defined(__RELEASE__) && (!defined(BOARD_WDT) || (BOARD_WDT == 0))
//    disable_wdt();
//    #else
//    enable_wdt();
//    #endif
//    
//    // Запрещение RTT и PIT прерываний (возможна проблема при одновременном прерывании
//    // из RTT и PIT с одним обработчиком). Т.к. сделано дибильно, завязав разные
//    // источники прерываний на один идентификатор AT91C_ID_SYS
//    #if defined(__ARM__)
//    AT91C_BASE_RTTC->RTTC_RTMR &= ~(AT91C_RTTC_ALMIEN | AT91C_RTTC_RTTINCIEN);
//    AT91C_BASE_PITC->PITC_PIMR &= ~AT91C_PITC_PITIEN;
//    #endif
//}

// ============================================================================
///
///                          Точка входа main
///
// ============================================================================
/// Core - базовый модуль, отвечающий за базовую инициализацию контроллера. В
/// модуле реализована фукнция main, последовательность вызова показана ниже
///
///  1. reset                    (startup.asm)
///  2. инициализация стеков     (startup.asm)
///  3. LowLevelInit             (core.cpp)
///  4. Инициализация переменных (runtime)
///  5. Конструкторы             (runtime)
///  6. main                     (core.cpp)
///  7. AppMain                  (точка входа пользовательского приложения)
/// 
// ============================================================================

int main (void) 
{
    // Инициализация переменных системы
    // Сохранение глобальный частоты системы MCK
    MckClock = BOARD_MCK;

//    // Запуск системного таймера
//    #if !defined(SYSTIMER_DISABLE_AUTOSTART) || (SYSTIMER_DISABLE_AUTOSTART == 0)
//    ServerTimer.Configure();
//    #endif
    
    // Разрешение прерываний
    _BIS_SR(GIE);
     
    // Точка входа в программу пользователя
    AppMain();
    
    return 0;
}
