//*****************************************************************************
//
// Имя файла    : 'pio.cpp'
// Заголовок    : Драйвер модуля Parallel Input Output Controller (PIO)
// Автор        : Барышников Р. А.
// Контакты     : plexus_bra@rambler.ru
// Дата         : 29/06/2012
//
//*****************************************************************************

#include "core\processor.h"
#include "core\pio.h"

// ============================================================================
///    
///                      Конфигурирование линии ввода/вывода
///    
// ============================================================================
/// При вызове этой функции автоматически включается тактирование линий
// ============================================================================
/// \param pin   Номер линии в формате (1 << pin)
/// \param cfg   Тактика работа линии    
// ============================================================================

void cfg_pin (uint pin, EPinCfg cfg)
{
    switch (cfg)
    {
        case PIN_INPUT:
            P1DIR &= ~pin;
            break;
        case PIN_INPUT_DRIVE:
            P1DIR &= ~pin;
            P1REN |= pin;
            break;
        case PIN_OUTPUT:
            P1DIR |= pin;
            break;
        default:
            P1DIR &= ~pin;
            P1REN |= pin;          
            break;
    }
}

// ============================================================================
///    
///                  Установка заданного уровнь на линии
///    
// ============================================================================
/// \param pin   Номер линии в формате (1 << pin)   
/// \param state Устанавливаемый логический уровень 
// ============================================================================

void set_pin (uint pin, bool state)
{
    if (state)
        P1OUT |= pin;
    else
        P1OUT &= ~pin;
}

// ============================================================================
///    
///                       Установка выхода в "1"
///    
// ============================================================================
/// \param pin  Номер линии в формате (1 << pin)   
// ============================================================================

void set_pin (uint pin)
{
    P1OUT |= pin;
}

// ============================================================================
///    
///                       Установка выхода в "0"
///    
// ============================================================================
/// \param pin  Номер линии в формате (1 << pin)   
// ============================================================================ 

void clr_pin (uint pin)
{
    P1OUT &= ~pin;
}

// ============================================================================
///    
///                       Инверсия состояния выхода 
///    
// ============================================================================
/// \param pin  Номер линии в формате (1 << pin)   
// ============================================================================

void inv_pin (uint pin)
{
    P1OUT ^= pin;
}

// ============================================================================
///    
///                       Чтение состояния линии
///    
// ============================================================================
/// \param pin  Номер линии в формате (1 << pin)   
/// \return     true - высокий уровень, false - низкий уровень
// ============================================================================

bool get_pin (uint pin)
{
    return ((P1IN & pin) != 0);
}